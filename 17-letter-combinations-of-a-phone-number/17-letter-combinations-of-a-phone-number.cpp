class Solution {
public:
    vector<string>ans;
    void fun(int x,string digits,string s){
        if(x>=digits.length()){
            if(s!=""){
                ans.push_back(s);
            }
            return;
        }
        if(digits[x]=='2'){
            fun(x+1,digits,s+'a');
            fun(x+1,digits,s+'b');
            fun(x+1,digits,s+'c');
        }
        if(digits[x]=='3'){
            fun(x+1,digits,s+'d');
            fun(x+1,digits,s+'e');
            fun(x+1,digits,s+'f');
        }
        if(digits[x]=='4'){
            fun(x+1,digits,s+'g');
            fun(x+1,digits,s+'h');
            fun(x+1,digits,s+'i');
        }
        if(digits[x]=='5'){
            fun(x+1,digits,s+'j');
            fun(x+1,digits,s+'k');
            fun(x+1,digits,s+'l');
        }
        if(digits[x]=='6'){
            fun(x+1,digits,s+'m');
            fun(x+1,digits,s+'n');
            fun(x+1,digits,s+'o');
        }
        if(digits[x]=='7'){
            fun(x+1,digits,s+'p');
            fun(x+1,digits,s+'q');
            fun(x+1,digits,s+'r');
            fun(x+1,digits,s+'s');
        }
        if(digits[x]=='8'){
            fun(x+1,digits,s+'t');
            fun(x+1,digits,s+'u');
            fun(x+1,digits,s+'v');
        }
        if(digits[x]=='9'){
            fun(x+1,digits,s+'w');
            fun(x+1,digits,s+'x');
            fun(x+1,digits,s+'y');
            fun(x+1,digits,s+'z');
        }
    }
    vector<string> letterCombinations(string digits) {
        ans.clear();
        string s="";
        fun(0,digits,s);
        return ans;
    }
};